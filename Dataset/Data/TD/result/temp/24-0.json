[
    {
        "vulnerableLines": "105-107",
        "vulnerabilityReason": "The function play_18 uses block.timestamp to check against a specific time in the future.",
        "potentialSecurityRisk": "A malicious miner could set the timestamp to match the condition and claim the reward unfairly.",
        "fixedCode": "function play_18(uint startTime) public { require(startTime + (5 * 1 days) <= block.timestamp, 'Game not started or already finished'); winner_18 = msg.sender; }"
    },
    {
        "vulnerableLines": "110-112",
        "vulnerabilityReason": "The function balances_29 uses block.timestamp to determine if a condition is met.",
        "potentialSecurityRisk": "Miners could manipulate the block timestamp to meet the condition and potentially execute the function in their favour.",
        "fixedCode": "function balances_29() view public returns (bool) { return now >= 1546300800; }"
    },
    {
        "vulnerableLines": "115-117",
        "vulnerabilityReason": "The function play_6 uses block.timestamp to verify a specific future time condition.",
        "potentialSecurityRisk": "A dishonest miner could exploit timestamp manipulation to meet the condition and win the game.",
        "fixedCode": "function play_6(uint startTime) public { require(startTime + (5 * 1 days) <= block.timestamp, 'Game not started or already finished'); winner_6 = msg.sender; }"
    }
]