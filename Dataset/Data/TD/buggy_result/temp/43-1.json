[
    {
        "vulnerableLines": "1-8",
        "vulnerabilityReason": "Uses now (alias for block.timestamp) for conditions in require statements and elsewhere.",
        "potentialSecurityRisk": "This allows a miner to influence the block timestamp and unfairly attempt to win or manipulate game logic.",
        "fixedCode": "function bug_tmstmp4 () public payable {\n\tuint pastBlockTime_tmstmp4;\n\trequire(msg.value == 10 ether, \"Must send 10 ether to play\"); // must send 10 ether to play\n\trequire(block.timestamp != pastBlockTime_tmstmp4, \"Only 1 transaction per block\"); // only 1 transaction per block\n\tpastBlockTime_tmstmp4 = block.timestamp;\n\tif(block.timestamp % 15 == 0) { // winner\n\t\tmsg.sender.transfer(address(this).balance);\n\t}\n}"
    },
    {
        "vulnerableLines": "14-18",
        "vulnerabilityReason": "Uses block.timestamp to compare against a given start time without accounting for miner manipulation.",
        "potentialSecurityRisk": "A miner could manipulate the block timestamp to match the required condition and win the game dishonestly.",
        "fixedCode": "function play_tmstmp7(uint startTime) public {\n\trequire(startTime + (5 * 1 days) <= block.timestamp, \"Too early to play\");\n\twinner_tmstmp7 = msg.sender;\n}"
    },
    {
        "vulnerableLines": "23-27",
        "vulnerabilityReason": "Uses block.timestamp to compare against a given start time without accounting for miner manipulation.",
        "potentialSecurityRisk": "A miner could manipulate the block timestamp to match the required condition and win the game dishonestly.",
        "fixedCode": "function play_tmstmp23(uint startTime) public {\n\trequire(startTime + (5 * 1 days) <= block.timestamp, \"Too early to play\");\n\twinner_tmstmp23 = msg.sender;\n}"
    },
    {
        "vulnerableLines": "65-68",
        "vulnerabilityReason": "Uses block.timestamp directly in a condition to determine the winner.",
        "potentialSecurityRisk": "Miners can manipulate the block timestamp to unfairly obtain the winning condition.",
        "fixedCode": "function play_tmstmp14(uint startTime) public {\n\trequire(startTime + (5 * 1 days) <= block.timestamp, \"Too early to play\");\n\twinner_tmstmp14 = msg.sender;\n}"
    },
    {
        "vulnerableLines": "93-95",
        "vulnerabilityReason": "Uses block.timestamp directly in a condition to determine the winner.",
        "potentialSecurityRisk": "Miners can manipulate the block timestamp to unfairly obtain the winning condition.",
        "fixedCode": "function play_tmstmp30(uint startTime) public {\n\trequire(startTime + (5 * 1 days) <= block.timestamp, \"Too early to play\");\n\twinner_tmstmp30 = msg.sender;\n}"
    }
]