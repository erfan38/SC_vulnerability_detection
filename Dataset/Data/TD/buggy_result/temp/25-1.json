[
    {
        "vulnerableLines": "1-3",
        "vulnerabilityReason": "Uses block.timestamp to determine the winning condition without accounting for miner manipulation.",
        "potentialSecurityRisk": "A miner could manipulate the block timestamp to match the required condition and win the game dishonestly.",
        "fixedCode": "function play_tmstmp14(uint startTime) public {\n\trequire(startTime + (5 * 1 days) <= block.timestamp, \"Too early to play\");\n\twinner_tmstmp14 = msg.sender;\n}"
    },
    {
        "vulnerableLines": "21-23",
        "vulnerabilityReason": "Uses block.timestamp to determine the winning condition without accounting for miner manipulation.",
        "potentialSecurityRisk": "A miner could manipulate the block timestamp to match the required condition and win the game dishonestly.",
        "fixedCode": "function play_tmstmp30(uint startTime) public {\n\trequire(startTime + (5 * 1 days) <= block.timestamp, \"Too early to play\");\n\twinner_tmstmp30 = msg.sender;\n}"
    },
    {
        "vulnerableLines": "57-57",
        "vulnerabilityReason": "Uses now (alias for block.timestamp) for checking a condition without accounting for miner manipulation.",
        "potentialSecurityRisk": "This allows a miner to influence the block timestamp and place a bet within the critical last 10 minutes window dishonestly.",
        "fixedCode": "require(block.timestamp < (gameList[_fixtureId].timestamp - 10 minutes), \"Betting is only allowed 10 minutes before the game\");"
    },
    {
        "vulnerableLines": "64-71",
        "vulnerabilityReason": "Uses now (alias for block.timestamp) in require statements and to determine the winning condition.",
        "potentialSecurityRisk": "This allows a miner to influence the block timestamp and unfairly attempt to win or manipulate gameplay logic.",
        "fixedCode": "function bug_tmstmp8 () public payable {\n\trequire(msg.value == 10 ether, \"Must send 10 ether to play\"); // must send 10 ether to play\n\trequire(block.timestamp != pastBlockTime_tmstmp8, \"Only 1 transaction per block\"); // only 1 transaction per block\n\tpastBlockTime_tmstmp8 = block.timestamp;\n\tif(block.timestamp % 15 == 0) { // winner\n\t\tmsg.sender.transfer(address(this).balance);\n\t}\n}"
    },
    {
        "vulnerableLines": "107-111",
        "vulnerabilityReason": "Uses block.timestamp to determine the winning condition without accounting for miner manipulation.",
        "potentialSecurityRisk": "A miner could manipulate the block timestamp to match the required condition and win the game dishonestly.",
        "fixedCode": "function play_tmstmp39(uint startTime) public {\n\trequire(startTime + (5 * 1 days) <= block.timestamp, \"Too early to play\");\n\twinner_tmstmp39 = msg.sender;\n}"
    }
]