[
    {
        "vulnerableLines": "1-4",
        "vulnerabilityReason": "Uses block.timestamp to compare against a given start time without accounting for miner manipulation.",
        "potentialSecurityRisk": "A miner could manipulate the block timestamp to match the required condition and win the game dishonestly.",
        "fixedCode": "function play_tmstmp23(uint startTime) public {\n\t    require(startTime + (5 * 1 days) <= block.timestamp, \"Too early to play\");\n\t    winner_tmstmp23 = msg.sender;\n}"
    },
    {
        "vulnerableLines": "10-12",
        "vulnerabilityReason": "Uses block.timestamp to compare against a given start time without accounting for miner manipulation.",
        "potentialSecurityRisk": "A miner could manipulate the block timestamp to match the required condition and win the game dishonestly.",
        "fixedCode": "function play_tmstmp14(uint startTime) public {\n\t    require(startTime + (5 * 1 days) <= block.timestamp, \"Too early to play\");\n\t    winner_tmstmp14 = msg.sender;\n}"
    },
    {
        "vulnerableLines": "22-25",
        "vulnerabilityReason": "Uses block.timestamp to compare against a given start time without accounting for miner manipulation.",
        "potentialSecurityRisk": "A miner could manipulate the block timestamp to match the required condition and win the game dishonestly.",
        "fixedCode": "function play_tmstmp30(uint startTime) public {\n\t    require(startTime + (5 * 1 days) <= block.timestamp, \"Too early to play\");\n\t    winner_tmstmp30 = msg.sender;\n}"
    },
    {
        "vulnerableLines": "34-41",
        "vulnerabilityReason": "Uses now (alias for block.timestamp) for conditions in require statements and elsewhere.",
        "potentialSecurityRisk": "This allows a miner to influence the block timestamp and unfairly attempt to win or manipulate game logic.",
        "fixedCode": "function bug_tmstmp8 () public payable {\n\t    require(msg.value == 10 ether, \"Must send 10 ether to play\");\n\t    require(block.timestamp != pastBlockTime_tmstmp8, \"Only 1 transaction per block\");\n\t    pastBlockTime_tmstmp8 = block.timestamp;\n\t    if(block.timestamp % 15 == 0) {\n\t        msg.sender.transfer(address(this).balance);\n\t    }\n}"
    },
    {
        "vulnerableLines": "61-65",
        "vulnerabilityReason": "Uses block.timestamp to compare against a given start time without accounting for miner manipulation.",
        "potentialSecurityRisk": "A miner could manipulate the block timestamp to match the required condition and win the game dishonestly.",
        "fixedCode": "function play_tmstmp39(uint startTime) public {\n\t    require(startTime + (5 * 1 days) <= block.timestamp, \"Too early to play\");\n\t    winner_tmstmp39 = msg.sender;\n}"
    },
    {
        "vulnerableLines": "81-88",
        "vulnerabilityReason": "Uses now (alias for block.timestamp) for conditions in require statements and elsewhere.",
        "potentialSecurityRisk": "This allows a miner to influence the block timestamp and unfairly attempt to win or manipulate game logic.",
        "fixedCode": "function bug_tmstmp36 () public payable {\n\t    require(msg.value == 10 ether, \"Must send 10 ether to play\");\n\t    require(block.timestamp != pastBlockTime_tmstmp36, \"Only 1 transaction per block\");\n\t    pastBlockTime_tmstmp36 = block.timestamp;\n\t    if(block.timestamp % 15 == 0) {\n\t        msg.sender.transfer(address(this).balance);\n\t    }\n}"
    },
    {
        "vulnerableLines": "98-102",
        "vulnerabilityReason": "Uses block.timestamp to compare against a given start time without accounting for miner manipulation.",
        "potentialSecurityRisk": "A miner could manipulate the block timestamp to match the required condition and win the game dishonestly.",
        "fixedCode": "function play_tmstmp35(uint startTime) public {\n\t    require(startTime + (5 * 1 days) <= block.timestamp, \"Too early to play\");\n\t    winner_tmstmp35 = msg.sender;\n}"
    }
]