[
    {
        "vulnerableLines": "4-8",
        "vulnerabilityReason": "Uses block.timestamp to compare against a given start time without accounting for miner manipulation.",
        "potentialSecurityRisk": "A miner could manipulate the block timestamp to match the required condition and win the game dishonestly.",
        "fixedCode": "function play_tmstmp39(uint startTime) public {\n\t\trequire(block.timestamp >= startTime + (5 * 1 days), \"Too early to play\");\n\t\twinner_tmstmp39 = msg.sender;\n\t}"
    },
    {
        "vulnerableLines": "32-39",
        "vulnerabilityReason": "Uses now (alias for block.timestamp) for conditions in require statements and elsewhere.",
        "potentialSecurityRisk": "This allows a miner to influence the block timestamp and unfairly attempt to win or manipulate game logic.",
        "fixedCode": "function bug_tmstmp36 () public payable {\n\t\trequire(msg.value == 10 ether, \"Must send 10 ether to play\");\n\t\trequire(block.timestamp != pastBlockTime_tmstmp36, \"Only 1 transaction per block\");\n\t\tpastBlockTime_tmstmp36 = block.timestamp;\n\t\tif(block.timestamp % 15 == 0) {\n\t\t\tmsg.sender.transfer(address(this).balance);\n\t\t}\n\t}"
    },
    {
        "vulnerableLines": "56-60",
        "vulnerabilityReason": "Uses block.timestamp to compare against a given start time without accounting for miner manipulation.",
        "potentialSecurityRisk": "A miner could manipulate the block timestamp to match the required condition and win the game dishonestly.",
        "fixedCode": "function play_tmstmp35(uint startTime) public {\n\t\trequire(block.timestamp >= startTime + (5 * 1 days), \"Too early to play\");\n\t\twinner_tmstmp35 = msg.sender;\n\t}"
    },
    {
        "vulnerableLines": "83-90",
        "vulnerabilityReason": "Uses now (alias for block.timestamp) for conditions in require statements and elsewhere.",
        "potentialSecurityRisk": "This allows a miner to influence the block timestamp and unfairly attempt to win or manipulate game logic.",
        "fixedCode": "function bug_tmstmp40 () public payable {\n\t\trequire(msg.value == 10 ether, \"Must send 10 ether to play\");\n\t\trequire(block.timestamp != pastBlockTime_tmstmp40, \"Only 1 transaction per block\");\n\t\tpastBlockTime_tmstmp40 = block.timestamp;\n\t\tif(block.timestamp % 15 == 0) {\n\t\t\tmsg.sender.transfer(address(this).balance);\n\t\t}\n\t}"
    },
    {
        "vulnerableLines": "101-103",
        "vulnerabilityReason": "Uses block.timestamp for comparison without accounting for miner manipulation.",
        "potentialSecurityRisk": "This condition can be manipulated by miners to execute certain operations ahead of time.",
        "fixedCode": "function bug_tmstmp33() view public returns (bool) {\n\t\treturn block.timestamp >= 1546300800;\n\t}"
    }
]