[
    {
        "vulnerableLines": "28-32",
        "vulnerabilityReason": "Uses block.timestamp to compare against a given start time without accounting for miner manipulation.",
        "potentialSecurityRisk": "A miner could manipulate the block timestamp to match the required condition and win the game dishonestly.",
        "fixedCode": "function play_tmstmp31(uint startTime) public {\n\t\trequire(startTime + (5 * 1 days) <= block.timestamp, \"Too early to play\");\n\t\twinner_tmstmp31 = msg.sender;\n\t}"
    },
    {
        "vulnerableLines": "38-40",
        "vulnerabilityReason": "Uses block.timestamp for comparison without accounting for miner manipulation.",
        "potentialSecurityRisk": "This condition can be manipulated by miners to execute certain operations ahead of time.",
        "fixedCode": "function bug_tmstmp13() view public returns (bool) {\n\t\treturn block.timestamp >= 1546300800;\n\t}"
    },
    {
        "vulnerableLines": "50-50",
        "vulnerabilityReason": "Uses block.timestamp directly in a variable assignment.",
        "potentialSecurityRisk": "This timestamp can be manipulated by miners, potentially affecting logic dependent on this value.",
        "fixedCode": "uint256 bugv_tmstmp5 = block.timestamp; // Ensure this value is used in non-critical logic only"
    },
    {
        "vulnerableLines": "53-55",
        "vulnerabilityReason": "Uses block.timestamp for a require statement to control token transfer timing.",
        "potentialSecurityRisk": "Miners can manipulate the timestamp to gain unfair advantage in trading.",
        "fixedCode": "function transfer(address to, uint value) public returns(bool) {\n\t\trequire(now > coinTradeStart, \"Coin trade not started\");\n\t\tsuper.transfer(to, value);\n\t}"
    },
    {
        "vulnerableLines": "57-57",
        "vulnerabilityReason": "Uses block.timestamp directly in a variable assignment.",
        "potentialSecurityRisk": "This timestamp can be manipulated by miners, potentially affecting logic dependent on this value.",
        "fixedCode": "uint256 bugv_tmstmp1 = block.timestamp; // Ensure this value is used in non-critical logic only"
    },
    {
        "vulnerableLines": "59-61",
        "vulnerabilityReason": "Uses block.timestamp for a require statement to control token transfer timing.",
        "potentialSecurityRisk": "Miners can manipulate the timestamp to gain unfair advantage in trading.",
        "fixedCode": "function transferFrom(address _from, address _to, uint _value) public returns(bool) {\n\t\trequire(now > coinTradeStart, \"Coin trade not started\");\n\t\tsuper.transferFrom(_from, _to, _value);\n\t}"
    },
    {
        "vulnerableLines": "63-63",
        "vulnerabilityReason": "Uses block.timestamp directly in a variable assignment.",
        "potentialSecurityRisk": "This timestamp can be manipulated by miners, potentially affecting logic dependent on this value.",
        "fixedCode": "uint256 bugv_tmstmp2 = block.timestamp; // Ensure this value is used in non-critical logic only"
    }
]