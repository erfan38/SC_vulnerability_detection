[
    {
        "vulnerableLines": "111-113",
        "vulnerabilityReason": "Arithmetic subtraction operation without proper bounds checking before modification.",
        "potentialSecurityRisk": "Can cause an integer underflow, leading to balance values being erroneously high.",
        "fixedCode": "function transfer_intou18(address _to, uint _value) public returns (bool) {\n    require(balances_intou18[msg.sender] >= _value, 'Insufficient balance');\n    balances_intou18[msg.sender] -= _value;\n    balances_intou18[_to] += _value;\n    return true;\n}"
    },
    {
        "vulnerableLines": "119-121",
        "vulnerabilityReason": "Arithmetic addition operation without bounds checking, causing potential overflow.",
        "potentialSecurityRisk": "Can exceed the maximum value for lockTime, leading to denial of service or unlocking assets later than intended.",
        "fixedCode": "function increaseLockTime_intou29(uint _secondsToIncrease) public {\n    require(lockTime_intou29[msg.sender] <= type(uint).max - _secondsToIncrease, 'Overflow risk');\n    lockTime_intou29[msg.sender] += _secondsToIncrease;\n}"
    }
]