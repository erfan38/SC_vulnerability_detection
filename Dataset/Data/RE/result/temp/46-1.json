[
    {
        "vulnerableLines": "1-4",
        "vulnerabilityReason": "The function sends ether to the user before updating the balance, leading to potential reentrancy vulnerability.",
        "potentialSecurityRisk": "An attacker could reenter the function to withdraw funds multiple times before their balance is updated.",
        "fixedCode": "function withdrawFundsAvailable(uint256 _weiToWithdraw) public { require(userBalanceAvailable[msg.sender] >= _weiToWithdraw); userBalanceAvailable[msg.sender] -= _weiToWithdraw; require(msg.sender.send(_weiToWithdraw)); }"
    },
    {
        "vulnerableLines": "22-30",
        "vulnerabilityReason": "The function sends ether to the user before updating the isAlreadyProcessed state variable, leading to potential reentrancy vulnerability.",
        "potentialSecurityRisk": "An attacker could reenter the function to withdraw funds multiple times before the state is updated.",
        "fixedCode": "function processStatusTwo() public { require(isAlreadyProcessed); isAlreadyProcessed = false; (bool success, ) = msg.sender.call.value(1 ether)(''); if (!success) { revert(); } }"
    }
]