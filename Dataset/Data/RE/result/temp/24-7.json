[
    {
        "vulnerableLines": "7-14",
        "vulnerabilityReason": "The function uses send to transfer ether before updating the balances_27 flag, allowing for reentrant calls to this function.",
        "potentialSecurityRisk": "An attacker could repeatedly call this function before the flag is updated, potentially draining funds from the contract.",
        "fixedCode": "function updates27() public { require(balances_27); balances_27 = false; if (!(msg.sender.send(1 ether))) { revert(); } }"
    },
    {
        "vulnerableLines": "52-57",
        "vulnerabilityReason": "Funds are sent to the user before the balance is deducted, allowing for potential reentrant execution.",
        "potentialSecurityRisk": "An attacker could exploit this to repeatedly withdraw ether beyond intended limits, exhausting the balance of the contract.",
        "fixedCode": "function withdrawFunds_31(uint256 _weiToWithdraw) public { require(balances_31[msg.sender] >= _weiToWithdraw); balances_31[msg.sender] -= _weiToWithdraw; require(msg.sender.send(_weiToWithdraw)); }"
    },
    {
        "vulnerableLines": "69-77",
        "vulnerabilityReason": "The function uses call.value to transfer ether before updating the balances_13 flag, allowing for reentrant calls to this function.",
        "potentialSecurityRisk": "An attacker could repeatedly call this function before the flag is updated, potentially draining funds from the contract.",
        "fixedCode": "function updates13() public { require(balances_13); balances_13 = false; (bool success,) = msg.sender.call.value(1 ether)(\"\"); if (!success) { revert(); } }"
    }
]