[
    {
        "vulnerableLines": "3-6",
        "vulnerabilityReason": "The function uses send to transfer ether before updating the variable_27, allowing for a reentrant call to this function.",
        "potentialSecurityRisk": "An attacker could exploit this by calling withdraw_27 multiple times before variable_27 is set to false, allowing them to drain funds from the contract.",
        "fixedCode": "function withdraw_27() public { require(variable_27); variable_27 = false; if (!(msg.sender.send(1 ether))) { revert(); } }"
    },
    {
        "vulnerableLines": "12-13",
        "vulnerabilityReason": "The function uses send to transfer ether before deducting the user's balance, exposing it to reentrancy.",
        "potentialSecurityRisk": "A malicious attacker could re-enter this function during the send call, resulting in the contract sending more ether than available, draining funds.",
        "fixedCode": "function withdrawFunds_31(uint256 _weiToWithdraw) public { require(balances_31[msg.sender] >= _weiToWithdraw); balances_31[msg.sender] -= _weiToWithdraw; require(msg.sender.send(_weiToWithdraw)); }"
    },
    {
        "vulnerableLines": "19-23",
        "vulnerabilityReason": "The function uses call.value to send ether before updating variable_13, making it susceptible to reentrancy.",
        "potentialSecurityRisk": "An attacker could exploit this by calling withdraw_13 repeatedly, draining ether before the state variable is updated.",
        "fixedCode": "function withdraw_13() public { require(variable_13); variable_13 = false; (bool success,) = msg.sender.call.value(1 ether)(''); if (!success) { revert(); } }"
    }
]